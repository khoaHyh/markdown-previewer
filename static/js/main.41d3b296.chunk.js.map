{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["INITIAL_MARKDOWN","App","useState","textValue","setTextValue","markdown","setMarkdown","useEffect","className","id","type","value","onChange","event","target","children","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"oOAKMA,EAAgB,glBAmDPC,EA1BH,WAAO,IAAD,EACkBC,qBADlB,mBACTC,EADS,KACEC,EADF,OAEgBF,mBAAS,GAAD,OAAIF,IAF5B,mBAETK,EAFS,KAECC,EAFD,KAKhBC,qBAAU,WACRH,EAAaJ,KACZ,IAQH,OACE,sBAAKQ,UAAU,MAAf,UACE,cAAC,IAAD,IACA,0BAAUC,GAAG,SAASC,KAAK,OAAOC,MAAOR,EAAWS,SARnC,SAACC,GACpBT,EAAaS,EAAMC,OAAOH,OAC1BL,EAAY,GAAD,OAAIO,EAAMC,OAAOH,WAO1B,qBAAKF,GAAG,UAAR,SACE,cAAC,IAAD,CAAeM,SAAUV,UCtClBW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.41d3b296.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport ReactFCCtest from 'react-fcctest';\nimport ReactMarkdown from 'react-markdown';\n\nconst INITIAL_MARKDOWN = `# H1 header  \n## H2 sub header  \n[react-markdown](https://github.com/remarkjs/react-markdown)  \nThis is an inline code: \\`import { useState, useEffect } from 'react'\\`  \n\\`\\`\\`\n// Multi-line code block!!:\n\nconst App = () => {\n  const [message, setMessage] = useState();\n  useEffect = (() => {\n    setMessage('React Hooks are awesome.')\n  }, [])\n\n  return (\n    <h1>{message}</h1>\n  );\n}\n\\`\\`\\`\n* Mandatory list item  \n> Mandatory block quote  \n\n![](https://raw.githubusercontent.com/khoaHyh/portfolio-v2/master/static/portfolio-v2-screenshot.png)  \n**Mandatory Bold Text!**\n`;\n\nconst App = () => {\n  const [textValue, setTextValue] = useState();\n  const [markdown, setMarkdown] = useState(`${INITIAL_MARKDOWN}`);\n\n  // On page load, display initial markdown\n  useEffect(() => {\n    setTextValue(INITIAL_MARKDOWN);\n  }, []);\n\n  // Uses textarea input and passes the value to function that handles markdown state\n  const handleChange = (event) => {\n    setTextValue(event.target.value);\n    setMarkdown(`${event.target.value}`);\n  }\n\n  return (\n    <div className=\"App\">\n      <ReactFCCtest />\n      <textarea id=\"editor\" type=\"text\" value={textValue} onChange={handleChange}></textarea>\n      <div id=\"preview\">\n        <ReactMarkdown children={markdown} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}